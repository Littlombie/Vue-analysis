(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{149:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("如果你在使用Vue.js，肯定有很多组件之间相互传递参数的经历。当遇到父子组件需要通信的时候，我们通常会采用 props + emit 这种方式。但当通信双方不是父子组件甚至压根不存在相关联系，或者一个状态需要共享给多个组件时，就会非常麻烦，数据也会相当难维护。其实除了传递参数的方式，我们还可以结合业务需要考虑是否用Vuex去解决。")]),t._v(" "),t._m(2),t._v(" "),s("p",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的"),s("code",[t._v("状态管理模式")]),t._v("。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 "),s("a",{attrs:{href:"https://github.com/vuejs/vue-devtools",target:"_blank",rel:"noopener noreferrer"}},[t._v("devtools extension"),s("OutboundLink")],1),t._v("，提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。")]),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("我们从一个简单的技术demo来看")]),t._v(" "),t._m(4),s("p",[t._v("这个状态自管理应用包含以下几个部分：")]),t._v(" "),t._m(5),t._v(" "),s("p",[t._v("以下是一个表示“单向数据流”理念的极简示意：")]),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("但是，当我们的应用遇到多个组件共享状态时，单向数据流的简洁性很容易被破坏：")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),s("p",[t._v("另外，通过定义和隔离状态管理中的各种概念并强制遵守一定的规则，我们的代码将会变得更结构化且易维护。")]),t._v(" "),s("p",[t._v("这就是 Vuex 背后的基本思想，借鉴了 "),s("a",{attrs:{href:"https://facebook.github.io/flux/docs/overview.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flux"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"http://redux.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux"),s("OutboundLink")],1),t._v("、和 "),s("a",{attrs:{href:"https://guide.elm-lang.org/architecture/",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Elm Architecture"),s("OutboundLink")],1),t._v("。与其他模式不同的是，Vuex 是专门为 Vue.js 设计的状态管理库，以利用 Vue.js 的细粒度数据响应机制来进行高效的状态更新。")]),t._v(" "),t._m(10),t._v(" "),s("p",[t._v("简而言之：Vuex 相当于某种意义上设置了读写权限的全局变量，将数据保存保存到该“全局变量”下，并通过一定的方法去读写数据。")]),t._v(" "),t._m(11),t._v(" "),s("p",[t._v("虽然 Vuex 可以帮助我们管理共享状态，但也附带了更多的概念和框架。这需要对短期和长期效益进行权衡。")]),t._v(" "),s("p",[t._v("如果您不打算开发大型单页应用，使用 Vuex 可能是繁琐冗余的。确实是如此——如果您的应用够简单，您最好不要使用 Vuex。一个简单的 "),s("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/state-management.html#%E7%AE%80%E5%8D%95%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E8%B5%B7%E6%AD%A5%E4%BD%BF%E7%94%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("store"),s("OutboundLink")],1),t._v(" 模式就足够您所需了。但是，如果您需要构建一个中大型单页应用，您很可能会考虑如何更好地在组件外部管理状态，Vuex 将会成为自然而然的选择。")]),t._v(" "),s("p",[t._v("Vuex 并不限制你的代码结构。但是，它规定了一些需要遵守的规则：")]),t._v(" "),t._m(12),t._v(" "),s("p",[t._v("对于大型应用我们会希望把 Vuex 相关代码分割到模块中。下面是项目结构示例：")]),t._v(" "),t._m(13),t._m(14),t._v(" "),s("p",[s("a",{attrs:{href:"https://vuex.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vuex"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/components.html#%E9%80%9A%E8%BF%87-Prop-%E5%90%91%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE",target:"_blank",rel:"noopener noreferrer"}},[t._v("prop"),s("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"vuex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex","aria-hidden":"true"}},[this._v("#")]),this._v(" Vuex")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[t._v("研究方向")]),t._v(" "),s("ul",[s("li",[t._v("state prop机制")])])]),t._v(" "),s("li",[s("p",[t._v("研究方法")]),t._v(" "),s("ul",[s("li",[t._v("vuex主要解决什么问题，如果不用vuex如何解决，")]),t._v(" "),s("li",[t._v("vuex如何管理state prop; state prop分别来处理什么内容？")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"vuex-认识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex-认识","aria-hidden":"true"}},[this._v("#")]),this._v(" vuex 认识")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"什么是“状态管理模式”？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是“状态管理模式”？","aria-hidden":"true"}},[this._v("#")]),this._v(" 什么是“状态管理模式”？")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Vue")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("//state")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("data")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      count"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("//view")]),t._v("\n  template"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token template-string"}},[s("span",{attrs:{class:"token string"}},[t._v("`\n  <div>{{count}}</div>\n  `")])]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("//actions")]),t._v("\n  methods"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token function"}},[t._v("increment")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("state，驱动应用的数据源；")]),this._v(" "),e("li",[this._v("view，以声明方式将 state 映射到视图；")]),this._v(" "),e("li",[this._v("actions，响应在 view 上的用户输入导致的状态变化。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"images/zhuangtai.png",alt:"单向数据流"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("多个视图依赖于同一状态。")]),this._v(" "),e("li",[this._v("来自不同视图的行为需要变更同一状态。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("对于问题一，传参的方法对于多层嵌套的组件将会非常繁琐，并且对于兄弟组件间的状态传递无能为力。"),e("br"),this._v("\n对于问题二，我们经常会采用父子组件直接引用或者通过事件来变更和同步状态的多份拷贝。以上的这些模式非常脆弱，通常会导致无法维护的代码。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("因此，我们可以把组件的共享状态抽取出来，以一个"),e("code",[this._v("全局单例模式")]),this._v("管理;在这种模式下,我们组件树构成一个巨大的"),e("code",[this._v("“视图”")]),this._v("，不管我们在处于输的那一层，或者任何组件都可以获取到状态,或者触发行为。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/Vue-analysis/images/vuex.png",alt:"vuex"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"什么情况下我们应该使用vuex？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么情况下我们应该使用vuex？","aria-hidden":"true"}},[this._v("#")]),this._v(" 什么情况下我们应该使用vuex？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("应用层级的状态应该集中到单个 store 对象中。")]),this._v(" "),e("li",[this._v("提交 mutation 是更改状态的唯一方法，并且这个过程是同步的。")]),this._v(" "),e("li",[this._v("异步逻辑都应该封装到 action 里面。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("├── index.html\n├── main.js\n├── api\n│   └── ... # 抽取出API请求\n├── components\n│   ├── App.vue\n│   └── ...\n└── store\n    ├── index.js          # 我们组装模块并导出 store 的地方\n    ├── actions.js        # 根级别的 action\n    ├── mutations.js      # 根级别的 mutation\n    └── modules\n        ├── cart.js       # 购物车模块\n        └── products.js   # 产品模块\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考")])}],!1,null,null,null);a.options.__file="index.md";e.default=a.exports}}]);
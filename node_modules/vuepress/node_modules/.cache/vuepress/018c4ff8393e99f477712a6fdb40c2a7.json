{"remainingRequest":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\WWW\\GitHub\\Vue-analysis\\docs\\render\\index.md?vue&type=template&id=4ba28dae&","dependencies":[{"path":"D:\\WWW\\GitHub\\Vue-analysis\\docs\\render\\index.md","mtime":1541347542283},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541347546517},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1541347592396},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541347546517},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\index.js","mtime":1541347592392},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1541347594857}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _c(\"ul\", [\n      _vm._m(3),\n      _vm._v(\" \"),\n      _vm._m(4),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"node中间层：\\n\"),\n        _c(\"ul\", [\n          _c(\"li\", [\n            _vm._v(\n              \"前后端分离，但优于前端直接请求接口从而产生的一系列问题。 比如可以用PHP写后端简单的接口，Node.js封装PHP接口，前端axios请求封装后的接口，将需要的数据返回到对应的view层页面，既解决了跨域问题（Node.js作为服务端，服务端没有跨域一说），同时又不需要配后端环境，只需要一个PHP接口 \"\n            ),\n            _c(\n              \"a\",\n              {\n                attrs: {\n                  href: \"https://segmentfault.com/a/1190000012950302\",\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\"\n                }\n              },\n              [_vm._v(\"详细说明\"), _c(\"OutboundLink\")],\n              1\n            )\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _vm._m(5)\n    ]),\n    _vm._v(\" \"),\n    _c(\"h2\", { attrs: { id: \"什么是render函数-渲染函数\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#什么是render函数-渲染函数\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 什么是render函数 (\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://cn.vuejs.org/v2/guide/render-function.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"渲染函数\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\")\")\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Render函数是Vue2.x版本新增的一个函数；使用虚拟dom来渲染节点提升性能，因为它是基于JavaScript计算。通过使用createElement(h)来创建dom节点。createElement是render的核心方法。其Vue编译的时候会把template里面的节点解析成虚拟dom；\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"vue推荐在绝大多数情况下使用template来创建我们的HTML。然而在一些场景中，我们真的需要JavaScript的完全编程的能力，这就是render函数，它比template更接近编译器。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"./template/demo1\")]),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"demo：\")]),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._m(9),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"其中可以传三个参数：\")]),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"VNodes必须唯一\\n组件树中的所有 VNodes 必须是唯一的。这意味着，下面的 render function 是无效的：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _c(\"p\", [\n      _vm._v(\n        \"如果你真的需要重复很多次的元素/组件，你可以使用工厂函数来实现。例如，下面这个例子 render 函数完美有效地渲染了 20 个相同的段落：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"只要在原生的 JavaScript 中可以轻松完成的操作，Vue 的 render 函数就不会提供专有的替代方法。比如，在 template 中使用的 v-if 和 v-for：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _c(\"p\", [\n      _vm._v(\"这些都会在 render 函数中被 JavaScript 的 if/else 和 map 重写：\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _c(\"p\", [\n      _vm._v(\n        \"这就是深入底层的代价，但与 v-model 相比，这可以让你更好地控制交互细节。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(20),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"对于 .passive、.capture 和 .once事件修饰符, Vue 提供了相应的前缀可以用于 on：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"例如:\")]),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _c(\"p\", [\n      _vm._v(\n        \"对于其他的修饰符，前缀不是很重要，因为你可以在事件处理函数中使用事件方法：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(23),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"这里是一个使用所有修饰符的例子：\")]),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._m(25),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"你可以通过 this.$slots 访问静态插槽的内容，得到的是一个 VNodes 数组：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _c(\"p\", [\n      _vm._v(\n        \"也可以通过 this.$scopedSlots 访问作用域插槽，得到的是一个返回 VNodes 的函\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(27),\n    _vm._m(28),\n    _vm._v(\" \"),\n    _vm._m(29),\n    _c(\"h2\", { attrs: { id: \"ast\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#ast\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://www.php.cn/js-tutorial-407382.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"AST\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"AST是指抽象语法树（abstract syntax tree），或者语法树（syntax tree），是源代码的抽象语法结构的树状表现形式。Vue在mount过程中，template会被编译成AST语法树。\\n然后，经过generate（将AST语法树转化成render function字符串的过程）得到render函数，返回VNode。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(30),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"编译相关的代码都在 compiler文件中\")]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"core/instance / render.js 中\")]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"observe - 响应式\\n_ 在js中默认为是定义的私有属性 ，建议不要多次访问\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"(视频2-5， 2-6)\\nplatform/util/index.js  判断是否是render 还是template\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"new watcher() 渲染 watcher (observer/watcher.js )\")]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Vue 的 _render 方法是实例的一个私有方法，它用来把实例渲染成一个虚拟 Node。它的定义在 src/core/instance/render.js 文件中：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _vm._m(32),\n    _vm._v(\" \"),\n    _vm._m(33),\n    _vm._v(\" \"),\n    _vm._m(34),\n    _vm._m(35),\n    _vm._v(\" \"),\n    _vm._m(36),\n    _vm._m(37),\n    _vm._v(\" \"),\n    _vm._m(38),\n    _vm._m(39),\n    _vm._v(\" \"),\n    _vm._m(40),\n    _vm._m(41),\n    _vm._v(\" \"),\n    _vm._m(42),\n    _vm._v(\" \"),\n    _vm._m(43),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"备注：\\nrender方法可以使用JSX语法，但需要Babel plugin插件；\\nrender方法里的第三个参数可以使用函数来生成多个组件（特别是如果他们相同的话），只要生成结果是一个数组，且数组元素都是VNode即可；\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"注意：\\nrender函数室友限制的，Vue.js 2.X支持，但是1.X无法使用。\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(44),\n    _vm._v(\" \"),\n    _vm._m(45),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://blog.csdn.net/wngzhem/article/details/54291024\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"vue Render函数进阶\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://www.cnblogs.com/tugenhua0707/p/7528621.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"理解Vue中的Render渲染函数\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href:\n              \"https://blog.csdn.net/weixin_42229553/article/details/80444919\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [\n          _vm._v(\"(一) Vue基础个人总结，条件渲染，列表渲染，组件等\"),\n          _c(\"OutboundLink\")\n        ],\n        1\n      ),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://www.jb51.net/article/122424.htm\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"如何理解Vue的render函数的具体用法\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://www.cnblogs.com/leungUwah/p/6921873.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"Vue2.x中的Render函数\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://www.alloyteam.com/2017/07/12918/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"用jsx写vue组件\"), _c(\"OutboundLink\")],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"render\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#render\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" render\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"研究方向\")]),\n        _vm._v(\" \"),\n        _c(\"ul\", [_c(\"li\", [_vm._v(\"render机制\")])])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"研究方法\")]),\n        _vm._v(\" \"),\n        _c(\"ul\", [\n          _c(\"li\", [\n            _vm._v(\n              \"条件渲染、列表渲染、update、模板、服务器渲染、渲染性能，如何编译，ast是什么\"\n            )\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"web页面渲染分四种方式\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#web页面渲染分四种方式\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" web页面渲染分四种方式\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _vm._v(\"后端模板渲染：\\n\"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"指使用PHP等后端语言来生成页面，通常情况下，需要后端配合，混合项目开发。以前项目都这样搞，缺点大于优点\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _vm._v(\"客户端渲染：\\n\"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"指使用 JS 来渲染页面大部分内容，后端资源都是通过ajax请求数据来渲染。代表是现在流行的 SPA 单页面应用；\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _vm._v(\"服务端渲染（ssr）：\\n\"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"主要指的是ssr，在准确点说就是「同构渲染」指前后端共用 JS，首次渲染时使用 Node.js 来直出 HTML。一般来说同构渲染是介于前后端中的共有部分。\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [\n      _c(\"p\", [\n        _vm._v(\n          \"在之前的Vue1.X版本中没有Virtual DOM,Vue2.0之后添加了此功能，而Virtual DOM 最后是通过\"\n        ),\n        _c(\"code\", [_vm._v(\"render\")]),\n        _vm._v(\"函数来生成模板页面\"),\n        _c(\"br\"),\n        _vm._v(\n          \"\\nvue  在new Vue()最后的渲染只认render 函数 所有的东西 html,template 都会编译成render函数\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"createelement-参数\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#createelement-参数\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" createElement 参数\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\"render (h) {\\n  return h('div', {}, this.text)\\n}\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"code\", [_vm._v(\"render\")]),\n      _vm._v(\"函数里面的传参h就是Vue里面的\"),\n      _c(\"code\", [_vm._v(\"createElement\")]),\n      _vm._v(\"方法，\"),\n      _c(\"code\", [_vm._v(\"return\")]),\n      _vm._v(\"返回一个\"),\n      _c(\"code\", [_vm._v(\"createElement\")]),\n      _vm._v(\n        \"方法，（官方文档：返回的其实不是一个实际的 DOM 元素。它更准确的名字可能是 createNodeDescription，因为它所包含的信息会告诉 Vue 页面上需要渲染什么样的节点，及其子节点。我们把这样的节点描述为“虚拟节点 (Virtual Node)”，也常简写它为“VNode”。“虚拟 DOM”是我们对由 Vue 组件树建立起来的整个 VNode 树的称呼。）\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\n          \"第一个参数 {String | Object | Function} 表示可以传一个 HTML 标签字符串，组件选项对象，或者解析上述任何一种的一个 async 异步函数。必需参数；\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"第二个参数 {Object} 一个包含模板相关属性的数据对象，对象里面可以是我们组件上面的props，或者是事件之类的东西，你可以在 template 中使用这些特性。可选参数；\"\n        ),\n        _c(\"br\"),\n        _vm._v(\"\\ndata的对象：\"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _vm._v(\"  \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 和`v-bind:class`一样的 API\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 接收一个字符串、对象或字符串和对象组成的数组\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'class'\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n    foo\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n    bar\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"false\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 和`v-bind:style`一样的 API\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 接收一个字符串、对象或对象组成的数组\")\n              ]),\n              _vm._v(\"\\n  style\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n    color\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'red'\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n    fontSize\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'14px'\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 普通的 HTML 特性\")\n              ]),\n              _vm._v(\"\\n  attrs\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n    id\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'foo'\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 组件 props\")\n              ]),\n              _vm._v(\"\\n  props\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n    myProp\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'bar'\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// DOM 属性\")\n              ]),\n              _vm._v(\"\\n  domProps\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n    innerHTML\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'baz'\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 事件监听器基于 `on`\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 所以不再支持如 `v-on:keyup.enter` 修饰器\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 需要手动匹配 keyCode。\")\n              ]),\n              _vm._v(\"\\n  on\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n    click\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"this\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"clickHandler\\n  \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 仅用于组件，用于监听原生事件，而不是组件内部使用\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// `vm.$emit` 触发的事件。\")\n              ]),\n              _vm._v(\"\\n  nativeOn\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n    click\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"this\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"nativeClickHandler\\n  \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\n                  \"// 自定义指令。注意，你无法对 `binding` 中的 `oldValue`\"\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 赋值，因为 Vue 已经自动为你进行了同步。\")\n              ]),\n              _vm._v(\"\\n  directives\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"[\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n      name\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'my-custom-directive'\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n      value\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'2'\")]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n      expression\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'1 + 1'\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n      arg\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'foo'\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n      modifiers\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n        bar\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"]\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 作用域插槽格式\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// { name: props => VNode | Array<VNode> }\")\n              ]),\n              _vm._v(\"\\n  scopedSlots\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"default\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" props \"),\n              _c(\"span\", { attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=>\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token function\" } }, [\n                _vm._v(\"createElement\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'span'\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" props\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"text\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 如果组件是其他组件的子组件，需为插槽指定名称\")\n              ]),\n              _vm._v(\"\\n  slot\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'name-of-slot'\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 其他特殊顶层属性\")\n              ]),\n              _vm._v(\"\\n  key\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'myKey'\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  ref\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'myRef'\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 如果你在渲染函数中向多个元素都应用了相同的 ref 名，\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 那么 `$refs.myRef` 会变成一个数组。\")\n              ]),\n              _vm._v(\"\\n  refInFor\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"第三个参数 {String | Array} 子虚拟节点 (VNodes)，由 \"),\n        _c(\"code\", [_vm._v(\"createElement()\")]),\n        _vm._v(\n          \" 构建而成， 也可以使用字符串来生成“文本虚拟节点”。可选参数。\\n如：\"\n        ),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _vm._v(\"  \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"[\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'先写一些文字'\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { attrs: { class: \"token function\" } }, [\n                _vm._v(\"createElement\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'h1'\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'一则头条'\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { attrs: { class: \"token function\" } }, [\n                _vm._v(\"createElement\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"MyComponent\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n      props\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n        someProp\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"'foobar'\")\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"]\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"使用render函数的结果和我们之前使用\"),\n      _c(\"code\", [_vm._v(\"template\")]),\n      _vm._v(\"解析出来的结果是一样的。\"),\n      _c(\"code\", [_vm._v(\"render\")]),\n      _vm._v(\"函数是发生在\"),\n      _c(\"code\", [_vm._v(\"beforeMount\")]),\n      _vm._v(\"和\"),\n      _c(\"code\", [_vm._v(\"mounted\")]),\n      _vm._v(\"之间的，这也从侧面说明了，在\"),\n      _c(\"code\", [_vm._v(\"beforeMount\")]),\n      _vm._v(\"的时候，\"),\n      _c(\"code\", [_vm._v(\"$el\")]),\n      _vm._v(\"还只是我们在HTML里面写的节点，然后到\"),\n      _c(\"code\", [_vm._v(\"mounted\")]),\n      _vm._v(\"的时候，它就把渲染出来的内容挂载到了\"),\n      _c(\"code\", [_vm._v(\"DOM\")]),\n      _vm._v(\"节点上。这中间的过程其实是执行了\"),\n      _c(\"code\", [_vm._v(\"render function\")]),\n      _vm._v(\"的内容。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"在使用\"),\n      _c(\"code\", [_vm._v(\".vue\")]),\n      _vm._v(\"文件开发的过程当中，我们在里面写了\"),\n      _c(\"code\", [_vm._v(\"template\")]),\n      _vm._v(\"模板，在经过了\"),\n      _c(\"code\", [_vm._v(\"vue-loader\")]),\n      _vm._v(\"的处理之后，就变成了\"),\n      _c(\"code\", [_vm._v(\"render function\")]),\n      _vm._v(\"，最终放到了\"),\n      _c(\"code\", [_vm._v(\"vue-loader\")]),\n      _vm._v(\"解析过的文件里面。这样做有什么好处呢？原因是由于在解析\"),\n      _c(\"code\", [_vm._v(\"template\")]),\n      _vm._v(\"变成\"),\n      _c(\"code\", [_vm._v(\"render function\")]),\n      _vm._v(\"的过程，是一个非常耗时的过程，\"),\n      _c(\"code\", [_vm._v(\"vue-loader\")]),\n      _vm._v(\"帮我们处理了这些内容之后，当我们在页面上执行\"),\n      _c(\"code\", [_vm._v(\"vue\")]),\n      _vm._v(\"代码的时候，效率会变得更高。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"render\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"createElement\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" myParagraphVNode \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'p'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'hi'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'div'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 错误-重复的 VNodes\")\n          ]),\n          _vm._v(\"\\n    myParagraphVNode\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" myParagraphVNode\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"  render\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"createElement\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'div'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n    Array\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"apply\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"null\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" length\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"20\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"map\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'p'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'hi'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"使用javascript-代替模板功能\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#使用javascript-代替模板功能\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 使用JavaScript 代替模板功能\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-html extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-html\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"ul\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"v-if\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"items.length\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"li\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"v-for\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"item in items\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"{{ item.name }}\"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"li\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"ul\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"p\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"v-else\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"No items found.\"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"p\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"props\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'items'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\nrender\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"createElement\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"items\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"length\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'ul'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"items\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"map\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"item\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'li'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" item\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"name\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"else\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'p'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'No items found.'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"v-model\"),\n      _c(\"br\"),\n      _vm._v(\n        \"\\nrender 函数中没有与 v-model 的直接对应 - 你必须自己实现相应的逻辑：\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"props\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'value'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\nrender\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"createElement\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" self \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'input'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    domProps\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      value\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" self\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"value\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n    on\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      input\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"event\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n        self\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"$emit\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'input'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" event\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"target\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"value\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"事件-案件修饰符\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#事件-案件修饰符\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 事件&案件修饰符\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"Modifier(s)\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"Prefix\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\".passive\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"&\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\".capture\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"!\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\".once\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"~\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\".capture.once or .once.capture\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"~!\")])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"  on\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'!click'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"doThisInCapturingMode\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'~keyup'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"doThisOnce\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'~!mouseover'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"doThisOnceInCapturingMode\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"Modifier(s)\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"Equivalent in Handler\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\".stop\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"event.stopPropagation()\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\".prevent\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"event.preventDefault()\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\".self\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"if (event.target !== event.currentTarget) return\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"Keys: .enter, .13\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\n              \"if (event.keyCode !== 13) return (change 13 to another key code for other key modifiers)\"\n            )\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"Modifiers Keys: .ctrl, .alt, .shift, .meta\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\n              \"if (!event.ctrlKey) return (change ctrlKey to altKey, shiftKey, or metaKey, respectively)\"\n            )\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"  on\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    keyup\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"event\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 如果触发事件的元素不是事件绑定的元素\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 则返回\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"event\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"target \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"!==\")]),\n          _vm._v(\" event\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"currentTarget\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 如果按下去的不是 enter 键或者\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 没有同时按下 shift 键\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 则返回\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"!\")]),\n          _vm._v(\"event\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"shiftKey \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"||\")]),\n          _vm._v(\" event\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"keyCode \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"!==\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"13\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 阻止 事件冒泡\")\n          ]),\n          _vm._v(\"\\n      event\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"stopPropagation\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 阻止该元素默认的 keyup 事件\")\n          ]),\n          _vm._v(\"\\n      event\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"preventDefault\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [_vm._v(\"// ...\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"插槽\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#插槽\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 插槽\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"render\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"createElement\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// `<div><slot></slot></div>`\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'div'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$slots\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"default\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"props\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'message'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\nrender\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"createElement\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v('// `<div><slot :text=\"message\"></slot></div>`')\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'div'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$scopedSlots\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"default\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      text\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"message\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"如果要用渲染函数向子组件中传递作用域插槽，可以利用 \"),\n      _c(\"code\", [_vm._v(\"VNode\")]),\n      _vm._v(\" 数据对象中的 \"),\n      _c(\"code\", [_vm._v(\"scopedSlots\")]),\n      _vm._v(\" 域：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"render\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"createElement\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'div'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'child'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 在数据对象中传递 `scopedSlots`\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 格式：{ name: props => VNode | Array<VNode> }\")\n          ]),\n          _vm._v(\"\\n      scopedSlots\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"default\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"props\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n          \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'span'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" props\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"text\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"源码分析\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#源码分析\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 源码分析\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"//再此定义一个render私有方法  返回一个vnode，通过vm.$options拿到render函数\"\n            )\n          ]),\n          _vm._v(\"\\nVue\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"prototype\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function-variable function\" } }, [\n            _vm._v(\"_render\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" VNode \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"const\")]),\n          _vm._v(\" vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" Component \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"const\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" render\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" _parentVnode \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$options \\n\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 复位_render标志在插槽上用于重复的插槽检查\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"process\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"env\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token constant\" } }, [\n            _vm._v(\"NODE_ENV\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"!==\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'production'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"for\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"const\")]),\n          _vm._v(\" key \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"in\")]),\n          _vm._v(\" vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$slots\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// $flow-disable-line\")\n          ]),\n          _vm._v(\"\\n      vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$slots\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"key\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"_rendered \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token boolean\" } }, [_vm._v(\"false\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"_parentVnode\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$scopedSlots \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" _parentVnode\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"data\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"scopedSlots \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"||\")]),\n          _vm._v(\" emptyObject\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 设置父vnode。这允许呈现函数访问占位符节点上的数据。\")\n          ]),\n          _vm._v(\"\\n  vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$vnode \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" _parentVnode\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// render self\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"let\")]),\n          _vm._v(\" vnode\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"try\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"//利用call的方法 参数一当前上下文，vm._renderProxy再生产环境下 就是vm，也就是this 本身，开发环境是一个proxy 对象\"\n            )\n          ]),\n          _vm._v(\"\\n    vnode \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" render\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"call\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"_renderProxy\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$createElement\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"catch\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [_vm._v(\"e\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"handleError\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"e\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token template-string\" } }, [\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"`render`\")\n            ])\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 返回错误呈现结果，\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 或先前的vnode，以防止呈现错误导致空白组件\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/* istanbul ignore else */\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"process\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"env\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token constant\" } }, [\n            _vm._v(\"NODE_ENV\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"!==\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'production'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$options\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"renderError\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"try\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n          vnode \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$options\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"renderError\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"call\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"_renderProxy\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$createElement\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" e\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"catch\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [_vm._v(\"e\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n          \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"handleError\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"e\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token template-string\" } }, [\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"`renderError`\")\n            ])\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n          vnode \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"_vnode\\n        \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"else\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n        vnode \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"_vnode\\n      \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"else\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      vnode \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"_vnode\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// 上边 会返回一个 vnode ， $options 这个函数可以自己写 ，也可以通过编译生成\"\n            )\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 如果呈现函数出错，返回空vnode\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"!\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"vnode \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"instanceof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"VNode\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"process\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"env\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token constant\" } }, [\n            _vm._v(\"NODE_ENV\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"!==\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'production'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"&&\")]),\n          _vm._v(\" Array\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"isArray\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"vnode\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"warn\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\n              \"'Multiple root nodes returned from render function. Render function '\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"+\")]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'should return a single root node.'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n        vm\\n      \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n    vnode \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createEmptyVNode\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// set parent\")\n          ]),\n          _vm._v(\"\\n  vnode\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"parent \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" _parentVnode\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" vnode\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"这段代码最关键的是 \"),\n      _c(\"code\", [_vm._v(\"render\")]),\n      _vm._v(\" 方法的调用，我们在平时的开发工作中手写 \"),\n      _c(\"code\", [_vm._v(\"render\")]),\n      _vm._v(\" 方法的场景比较少，而写的比较多的是 \"),\n      _c(\"code\", [_vm._v(\"template\")]),\n      _vm._v(\" 模板，在之前的 mounted 方法的实现中，会把 \"),\n      _c(\"code\", [_vm._v(\"template\")]),\n      _vm._v(\" 编译成 \"),\n      _c(\"code\", [_vm._v(\"render\")]),\n      _vm._v(\n        \" 方法，但这个编译过程是非常复杂的，我们不打算在这里展开讲，之后会专门花一个章节来分析 \"\n      ),\n      _c(\"code\", [_vm._v(\"Vue\")]),\n      _vm._v(\" 的编译过程。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"在 Vue 的官方文档中介绍了 \"),\n      _c(\"code\", [_vm._v(\"render\")]),\n      _vm._v(\" 函数的第一个参数是 \"),\n      _c(\"code\", [_vm._v(\"createElement\")]),\n      _vm._v(\"，那么结合之前的例子：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n          _vm._v(\"div id\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"app\"')]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" message \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"/\")]),\n          _vm._v(\"div\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"相当于我们编写如下 \"),\n      _c(\"code\", [_vm._v(\"render\")]),\n      _vm._v(\" 函数：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" vm \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [_vm._v(\"Vue\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  el\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'#app'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"render\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"createElement\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'div'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      attrs\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n        id\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'app'\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"message\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"data\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" message\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Hello Vue!'\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"再回到 \"),\n      _c(\"code\", [_vm._v(\"_render\")]),\n      _vm._v(\" 函数中的 \"),\n      _c(\"code\", [_vm._v(\"render\")]),\n      _vm._v(\"方法的调用：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"vnode \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" render\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"call\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"_renderProxy\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$createElement\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"可以看到，\"),\n      _c(\"code\", [_vm._v(\"render\")]),\n      _vm._v(\" 函数中的 \"),\n      _c(\"code\", [_vm._v(\"createElement\")]),\n      _vm._v(\" 方法就是 \"),\n      _c(\"code\", [_vm._v(\"vm.$createElement\")]),\n      _vm._v(\" 方法：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"export\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"initRender\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" Component\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [_vm._v(\"// ...\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"//将createElement fn绑定到这个实例，这样我们就可以在其中获得适当的呈现上下文。\"\n            )\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// args顺序:标签、数据、子元素、normalizationType、alwaysNormalize内部版本由模板编译的呈现函数使用\"\n            )\n          ]),\n          _vm._v(\"\\n  vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function-variable function\" } }, [\n            _vm._v(\"_c\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"a\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" b\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" c\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" d\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=>\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" a\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" b\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" c\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" d\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token boolean\" } }, [_vm._v(\"false\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//规范化通常应用于公共版本，用于用户编写的呈现函数。\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//手写render函数 创建的方法\")\n          ]),\n          _vm._v(\"\\n  vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function-variable function\" } }, [\n            _vm._v(\"$createElement\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"a\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" b\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" c\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" d\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=>\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"vm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" a\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" b\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" c\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" d\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token boolean\" } }, [_vm._v(\"true\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"实际上，\"),\n      _c(\"code\", [_vm._v(\"vm.$createElement\")]),\n      _vm._v(\" 方法定义是在执行 \"),\n      _c(\"code\", [_vm._v(\"initRender\")]),\n      _vm._v(\" 方法的时候，可以看到除了 \"),\n      _c(\"code\", [_vm._v(\"vm.$createElement\")]),\n      _vm._v(\" 方法，还有一个 \"),\n      _c(\"code\", [_vm._v(\"vm._c\")]),\n      _vm._v(\" 方法，它是被模板编译成的 \"),\n      _c(\"code\", [_vm._v(\"render\")]),\n      _vm._v(\" 函数使用，而 \"),\n      _c(\"code\", [_vm._v(\"vm.$createElement\")]),\n      _vm._v(\" 是用户手写 \"),\n      _c(\"code\", [_vm._v(\"render\")]),\n      _vm._v(\" 方法使用的， 这俩个方法支持的参数相同，并且内部都调用了 \"),\n      _c(\"code\", [_vm._v(\"createElement\")]),\n      _vm._v(\" 方法。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"总结\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#总结\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 总结\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [_vm._v(\"render方法的实质就是生成template模板；\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"通过调用一个方法来生成，而这个方法是通过render方法的参数传递给它的；\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"这个方法有三个参数，分别提供标签名，标签相关属性，标签内部的html内容\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"通过这三个参数，可以生成一个完整的模板\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"code\", [_vm._v(\"vm._render\")]),\n      _vm._v(\"最终是通过执行 \"),\n      _c(\"code\", [_vm._v(\"createElement\")]),\n      _vm._v(\" 方法并返回的是 \"),\n      _c(\"code\", [_vm._v(\"vnode\")]),\n      _vm._v(\"，它是一个虚拟 \"),\n      _c(\"code\", [_vm._v(\"Node\")]),\n      _vm._v(\"。Vue 2.0 相比 Vue 1.0 最大的升级就是利用了 \"),\n      _c(\"code\", [_vm._v(\"Virtual DOM\")]),\n      _vm._v(\"。因此在分析 \"),\n      _c(\"code\", [_vm._v(\"createElement\")]),\n      _vm._v(\" 的实现前，我们先了解一下 \"),\n      _c(\"code\", [_vm._v(\"Virtual DOM\")]),\n      _vm._v(\" 的概念。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"参考博客\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#参考博客\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" [参考博客]\")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
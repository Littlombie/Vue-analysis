{"remainingRequest":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\WWW\\GitHub\\Vue-analysis\\docs\\vuex\\core.md?vue&type=template&id=74e8ab07&","dependencies":[{"path":"D:\\WWW\\GitHub\\Vue-analysis\\docs\\vuex\\core.md","mtime":1541781854045},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541781859732},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1541781890915},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541781859732},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\index.js","mtime":1541781890913},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1541781893804}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._m(3),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._m(9),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"从 store 实例中读取状态最简单的方法就是在计算属性中返回某个状态：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _c(\"p\", [_vm._v(\"state 只是读取数据，他不会修改数据\")]),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._v(\" \"),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _c(\"p\", [\n      _vm._v(\n        \"在大多数情况下，载荷应该是一个对象，这样可以包含多个字段并且记录的 mutation 会更易读：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(20),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"提交 mutation 的另一种方式是直接使用包含 type 属性的对象：\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _vm._m(23),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _c(\"p\", [\n      _vm._v(\n        \"将整个对象传给 mutation后，vuex 会根据 type 参数识别到这是一个mutation 的载荷参数，然后自动填充 state 参数为第一位，第二位参数为传入的这个对象的第二位参数。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"mutations中尽量不要操作异步数据，操作的话 数据不会立即改变，我们一般情况下都是在actions中操作异步数据\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(25),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._v(\" \"),\n    _vm._m(27),\n    _vm._v(\" \"),\n    _vm._m(28),\n    _vm._v(\" \"),\n    _vm._m(29),\n    _vm._m(30),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _c(\"p\", [_vm._v(\"我们通过actions来执行异步操作\")]),\n    _vm._v(\" \"),\n    _vm._m(32),\n    _c(\"p\", [_vm._v(\"组件中这样实现\")]),\n    _vm._v(\" \"),\n    _vm._m(33),\n    _c(\"p\", [_vm._v(\"会发现 在两秒后才会状态才会发生改变\")]),\n    _vm._v(\" \"),\n    _vm._m(34),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"context 对象包含以下属性：\")]),\n    _vm._v(\" \"),\n    _vm._m(35),\n    _c(\"p\", [_vm._v(\"同时如果有第二个参数 payload 的话也能够接收\")]),\n    _vm._v(\" \"),\n    _vm._m(36),\n    _vm._v(\" \"),\n    _vm._m(37),\n    _vm._v(\" \"),\n    _vm._m(38),\n    _vm._m(39),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"Vuex 并不限制你的代码结构。但是，它规定了一些需要遵守的规则：\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(40),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"对于大型应用我们会希望把 Vuex 相关代码分割到模块中。下面是项目结构示例：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(41),\n    _vm._m(42),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://vuex.vuejs.org/zh/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"vuex\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://juejin.im/post/5a5f1a9df265da3e2f00faae\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"关于 mutation\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://segmentfault.com/a/1190000011528501\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [\n          _vm._v(\"【vuex入门系列02】mutation接收单个参数和多个参数\"),\n          _c(\"OutboundLink\")\n        ],\n        1\n      ),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://blog.csdn.net/wopelo/article/details/80285167\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"vuex中mutation/action的传参方式\"), _c(\"OutboundLink\")],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"核心概念\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#核心概念\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 核心概念\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"首先得引入\"),\n      _c(\"code\", [_vm._v(\"vuex\")]),\n      _vm._v(\"，然后通过\\n\"),\n      _c(\"code\", [_vm._v(\"vue.use(Vuex)\")]),\n      _vm._v(\"来\\n注册插件\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"const\")]),\n          _vm._v(\" store \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Vuex\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"Store\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//vuex的配置\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [_vm._v(\"Vue\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  el\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'#app'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n  store\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// store:store\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"一个\"),\n      _c(\"code\", [_vm._v(\"vue Store\")]),\n      _vm._v(\" 里边包括\"),\n      _c(\"code\", [_vm._v(\"state（状态）\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"getters（派生状态）\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"mutations（提交修改）\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"actions（提交修改数据）\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"module\")]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"state\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#state\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" State\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"code\", [_vm._v(\"state\")]),\n      _vm._v(\" 是用来存储状态，也就是变量；\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"store-js-中的写入\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#store-js-中的写入\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" store.js 中的写入\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  count\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"22\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n  list\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"1\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"5\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"6\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"4\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"3\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"56\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"20\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"在vue中获取vuex的状态\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#在vue中获取vuex的状态\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 在Vue中获取Vuex的状态\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"const\")]),\n          _vm._v(\" tpl \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  template\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token template-string\" } }, [\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"`<div>Your number of likes is: {{count}}</div>`\")\n            ])\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n  computed\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"count\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" \\n      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//store 为注册的全局\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$store\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"count\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"getters\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#getters\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Getters\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"code\", [_vm._v(\"getters\")]),\n      _vm._v(\" 表示派生状态。也就是\"),\n      _c(\"code\", [_vm._v(\"set\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"get\")]),\n      _vm._v(\"中的\"),\n      _c(\"code\", [_vm._v(\"get\")]),\n      _vm._v(\"，有两个可选参数：\"),\n      _c(\"code\", [_vm._v(\"state\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"getters\")]),\n      _vm._v(\"分别可以获取\"),\n      _c(\"code\", [_vm._v(\"state\")]),\n      _vm._v(\"中的变量和其他的\"),\n      _c(\"code\", [_vm._v(\"getters\")]),\n      _vm._v(\"。外部调用方式：\"),\n      _c(\"code\", [_vm._v(\"store.getters.personInfo()\")]),\n      _vm._v(\"。就和\"),\n      _c(\"code\", [_vm._v(\"vue\")]),\n      _vm._v(\"的\"),\n      _c(\"code\", [_vm._v(\"computed\")]),\n      _vm._v(\"差不多\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\" getters\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"getInfo\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token template-string\" } }, [\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"`our number of likes is: \")\n            ]),\n            _c(\"span\", { attrs: { class: \"token interpolation\" } }, [\n              _c(\n                \"span\",\n                {\n                  attrs: {\n                    class: \"token interpolation-punctuation punctuation\"\n                  }\n                },\n                [_vm._v(\"${\")]\n              ),\n              _vm._v(\"state\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"count\"),\n              _c(\n                \"span\",\n                {\n                  attrs: {\n                    class: \"token interpolation-punctuation punctuation\"\n                  }\n                },\n                [_vm._v(\"}\")]\n              )\n            ]),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"`\")])\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"filterdList\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" getters\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// return this.$store.list.filter (item => item > 10);\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"list\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"filter\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"item \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=>\")]),\n          _vm._v(\" item \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"10\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"getters中可以通过 参数\"),\n      _c(\"code\", [_vm._v(\"getters\")]),\n      _vm._v(\"来相互依赖引用其他的\"),\n      _c(\"code\", [_vm._v(\"getters（getters.getInfo）\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"mutations\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#mutations\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Mutations\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"mutations 是对\"),\n      _c(\"code\", [_vm._v(\"state\")]),\n      _vm._v(\"中的数据修改; 也就是\"),\n      _c(\"code\", [_vm._v(\"set\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"get\")]),\n      _vm._v(\"中的\"),\n      _c(\"code\", [_vm._v(\"set\")]),\n      _vm._v(\"，这是\"),\n      _c(\"code\", [_vm._v(\"vuex\")]),\n      _vm._v(\"中唯一修改\"),\n      _c(\"code\", [_vm._v(\"state\")]),\n      _vm._v(\"的方式，但不支持异步操作。\"),\n      _c(\"br\"),\n      _vm._v(\"\\n和\"),\n      _c(\"code\", [_vm._v(\"vue\")]),\n      _vm._v(\"中的\"),\n      _c(\"code\", [_vm._v(\"methods\")]),\n      _vm._v(\n        \"事件注册类似：每个mutaion都有一个字符串的事件类型（type）和一个回调函数（handler）。这个回调函数就是我们实际进行状态更改的地方，并且他会接受state作为第一个参数。\\n类似于js 的观察者模式，页面提交修改，然后这边做改变处理\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"提交载荷（payload）\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#提交载荷（payload）\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 提交载荷（payload）\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"可以向 \"),\n      _c(\"code\", [_vm._v(\"store.commit\")]),\n      _vm._v(\" 传入额外的参数，即 mutation 的 载荷（payload）\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"mutations\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"increment\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"n \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"1\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 第一个参数是 state，第二个参数叫额外的参数，这里是n\")\n          ]),\n          _vm._v(\"\\n    state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"count \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"+=\")]),\n          _vm._v(\" n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"decresement\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"count \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"--\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// 回调函数 increment 和参数10，后者是作为额外参数传入，n 就是10\"\n            )\n          ]),\n          _vm._v(\"\\nstore\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"commit\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'increment'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"3\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"mutations\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"increment\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" payload\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n\\t  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// payload 作为一个对象，更加可读，统一对象形式调用\")\n          ]),\n          _vm._v(\"\\n    state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"count \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"+=\")]),\n          _vm._v(\" payload\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"amount\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// 传入的是对象（即将额外的 mutation 参数以对象的方式传入）\"\n            )\n          ]),\n          _vm._v(\"\\nstore\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"commit\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'increment'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  amount\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"10\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"对象风格提交方式\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#对象风格提交方式\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 对象风格提交方式\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 这里也是传入一个对象，不过这个对象包含了 type 属性\")\n          ]),\n          _vm._v(\"\\nstore\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"commit\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  type\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'increment'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n  amount\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"10\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [\n      _c(\"p\", [\n        _vm._v(\n          \"这里只是一种提交 mutations 的方式，不必深究。\\n当使用这种对象风格的提交方式，整个对象都作为载荷传给 mutation 函数，因此 handler 保持不变：\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"mutations\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"increment\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" payload\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"count \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"+=\")]),\n          _vm._v(\" payload\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"amount\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// vuex 会将这个对象分解，除了 type 之外的，依然会是作为额外参数传入\"\n            )\n          ]),\n          _vm._v(\"\\nstore\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"commit\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  type\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'increment'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n  amount\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"10\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"actions\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#actions\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Actions\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"在 \"),\n      _c(\"code\", [_vm._v(\"mutation\")]),\n      _vm._v(\n        \" 中混合异步调用会导致你的程序很难调试。例如，当你调用了两个包含异步回调的 mutation 来改变状态，你怎么知道什么时候回调和哪个先回调呢？这就是为什么我们要区分这两个概念。在 Vuex 中，mutation 都是同步事务：\\n\"\n      ),\n      _vm._v(\"\\nAction 类似于 \"),\n      _c(\"code\", [_vm._v(\"mutation\")]),\n      _vm._v(\"，不同在于：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Action 提交的是 \"),\n      _c(\"code\", [_vm._v(\"mutation\")]),\n      _vm._v(\"，而不是直接变更状态。\\nAction 可以包含任意异步操作。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"第一个参数默认是和\"),\n      _c(\"code\", [_vm._v(\"store\")]),\n      _vm._v(\"具有相同参数属性的对象。外部调用方式：\"),\n      _c(\"code\", [_vm._v(\"store.dispatch('nameAsyn')\")]),\n      _vm._v(\"。\\n操作\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"actions\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"increment\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"context\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//context表示上线问\")\n          ]),\n          _vm._v(\"\\n    context\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"commit\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'increment'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"触发\"),\n      _c(\"code\", [_vm._v(\"actions\")]),\n      _vm._v(\" 的方法是在\"),\n      _c(\"code\", [_vm._v(\"template\")]),\n      _vm._v(\"中我们通过\"),\n      _c(\"code\", [_vm._v(\"diapatch()\")]),\n      _vm._v(\"来提交\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-html extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-html\" } }, [\n        _c(\"code\", [\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"button\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"@click\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"$store.dispatch(\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"'\")\n              ]),\n              _vm._v(\"increment\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"'\")\n              ]),\n              _vm._v(\")\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"add\"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"button\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"actions\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"increment\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"context\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Promise\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"resolve\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"reject\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=>\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"setTimeout\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=>\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n        context\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"commit\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'increment'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"resolve\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"2000\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"  methods\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"handleActionAdd\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"$state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"dispatch\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'increment'\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"then\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=>\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n        console\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"log\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"111\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"在 \"),\n      _c(\"code\", [_vm._v(\"store\")]),\n      _vm._v(\" 上注册 \"),\n      _c(\"code\", [_vm._v(\"action\")]),\n      _vm._v(\"。处理函数总是接受 \"),\n      _c(\"code\", [_vm._v(\"context\")]),\n      _vm._v(\" 作为第一个参数，\"),\n      _c(\"code\", [_vm._v(\"payload\")]),\n      _vm._v(\" 作为第二个参数（可选）。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 等同于 `store.state`，若在模块中则为局部状态\")\n          ]),\n          _vm._v(\"\\n  rootState\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 等同于 `store.state`，只存在于模块中\")\n          ]),\n          _vm._v(\"\\n  commit\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"     \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 等同于 `store.commit`\")\n          ]),\n          _vm._v(\"\\n  dispatch\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"   \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 等同于 `store.dispatch`\")\n          ]),\n          _vm._v(\"\\n  getters\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"    \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 等同于 `store.getters`\")\n          ]),\n          _vm._v(\"\\n  rootGetters \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 等同于 `store.getters`，只存在于模块中\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"modules\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#modules\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Modules\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"如果项目比较大的时候，项目全部放到一个\"),\n      _c(\"code\", [_vm._v(\"store.js\")]),\n      _vm._v(\" 或者 \"),\n      _c(\"code\", [_vm._v(\"main.js\")]),\n      _vm._v(\" 中 ，感觉比较乱，不太友好，\\n所以我们需要按模块分开，\"),\n      _c(\"br\"),\n      _vm._v(\n        \"\\nstore的子模块，内容就相当于是store的一个实例。调用方式和前面介绍的相似，只是要加上当前子模块名，如：\"\n      ),\n      _c(\"code\", [_vm._v(\"store.a.getters.xxx()\")]),\n      _vm._v(\"\\n每个模块拥有自己的 \"),\n      _c(\"code\", [_vm._v(\"state\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"mutation\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"action\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"getter\")]),\n      _vm._v(\"、甚至是嵌套子模块——从上至下进行同样方式的分割：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"const\")]),\n          _vm._v(\" moduleA \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"...\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n  mutations\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"...\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n  actions\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"...\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n  getters\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"...\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"const\")]),\n          _vm._v(\" moduleB \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"...\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n  mutations\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"...\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n  actions\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"...\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"const\")]),\n          _vm._v(\" store \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Vuex\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"Store\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  modules\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    a\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" moduleA\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n    b\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" moduleB\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\nstore\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"a \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// -> moduleA 的状态\")\n          ]),\n          _vm._v(\"\\nstore\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"state\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"b \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// -> moduleB 的状态\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"项目结构\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#项目结构\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 项目结构\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [_vm._v(\"应用层级的状态应该集中到单个 store 对象中。\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"提交 mutation 是更改状态的唯一方法，并且这个过程是同步的。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"异步逻辑都应该封装到 action 里面。\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"├── index.html\\n├── main.js\\n├── api\\n│   └── ... # 抽取出API请求\\n├── components\\n│   ├── App.vue\\n│   └── ...\\n└── store\\n    ├── index.js          # 我们组装模块并导出 store 的地方\\n    ├── state.js          # 跟级别的 state\\n    ├── getters.js        # 跟级别的 getter\\n    ├── mutation-types.js # 根级别的mutations名称（官方推荐mutions方法名使用大写）\\n    ├── mutations.js      # 根级别的 mutation\\n    ├── actions.js        # 根级别的 action\\n    └── modules\\n        ├── m1.js         # 模块1\\n        └── m2.js         # 模块2\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"参考\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#参考\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 参考\")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
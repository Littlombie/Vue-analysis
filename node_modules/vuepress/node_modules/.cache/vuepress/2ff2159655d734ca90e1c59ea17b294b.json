{"remainingRequest":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vuepress\\lib\\app\\serverEntry.js","dependencies":[{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vuepress\\lib\\app\\serverEntry.js","mtime":1540831856303},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540831838508},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\babel-loader\\lib\\index.js","mtime":1540831837228}],"contextDependencies":[],"result":["import \"core-js/modules/es6.promise\";\nimport { createApp } from './app';\nexport default (function (context) {\n  return new Promise(function (resolve, reject) {\n    var _createApp = createApp(),\n        app = _createApp.app,\n        router = _createApp.router;\n\n    var url = context.url;\n    var fullPath = router.resolve(url).route.fullPath;\n\n    if (fullPath !== url) {\n      return reject({\n        url: fullPath\n      });\n    }\n\n    router.push(url);\n    router.onReady(function () {\n      return resolve(app);\n    });\n  });\n});",{"version":3,"sources":["node_modules\\vuepress\\lib\\app\\serverEntry.js"],"names":["createApp","Promise","resolve","reject","app","router","url","context","fullPath","route","push","onReady"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,gBAAe;AAAA,SAAW,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAAA,qBACjCH,WADiC;AAAA,QACjDI,GADiD,cACjDA,GADiD;AAAA,QAC5CC,MAD4C,cAC5CA,MAD4C;;AAAA,QAEjDC,GAFiD,GAEzCC,OAFyC,CAEjDD,GAFiD;AAAA,QAGjDE,QAHiD,GAGpCH,OAAOH,OAAP,CAAeI,GAAf,EAAoBG,KAHgB,CAGjDD,QAHiD;;AAKzD,QAAIA,aAAaF,GAAjB,EAAsB;AACpB,aAAOH,OAAO;AAAEG,aAAKE;AAAP,OAAP,CAAP;AACD;;AAEDH,WAAOK,IAAP,CAAYJ,GAAZ;AACAD,WAAOM,OAAP,CAAe;AAAA,aAAMT,QAAQE,GAAR,CAAN;AAAA,KAAf;AACD,GAXyB,CAAX;AAAA,CAAf","sourceRoot":"D:\\WWW\\GitHub\\Vue-analysis","sourcesContent":["import { createApp } from './app'\r\n\r\nexport default context => new Promise((resolve, reject) => {\r\n  const { app, router } = createApp()\r\n  const { url } = context\r\n  const { fullPath } = router.resolve(url).route\r\n\r\n  if (fullPath !== url) {\r\n    return reject({ url: fullPath })\r\n  }\r\n\r\n  router.push(url)\r\n  router.onReady(() => resolve(app))\r\n})\r\n"]}]}
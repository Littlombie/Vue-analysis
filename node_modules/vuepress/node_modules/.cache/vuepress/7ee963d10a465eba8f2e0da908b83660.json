{"remainingRequest":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vuepress\\lib\\default-theme\\Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vuepress\\lib\\default-theme\\Navbar.vue","mtime":1541783270437},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541783222112},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\babel-loader\\lib\\index.js","mtime":1541783216953},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541783222112},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\index.js","mtime":1541783268967}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport SidebarButton from './SidebarButton.vue'\r\nimport AlgoliaSearchBox from '@AlgoliaSearchBox'\r\nimport SearchBox from './SearchBox.vue'\r\nimport NavLinks from './NavLinks.vue'\r\n\r\nexport default {\r\n  components: { SidebarButton, NavLinks, SearchBox, AlgoliaSearchBox },\r\n\r\n  data () {\r\n    return {\r\n      linksWrapMaxWidth: null\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    const MOBILE_DESKTOP_BREAKPOINT = 719 // refer to config.styl\r\n    const NAVBAR_VERTICAL_PADDING = parseInt(css(this.$el, 'paddingLeft')) + parseInt(css(this.$el, 'paddingRight'))\r\n    const handleLinksWrapWidth = () => {\r\n      if (document.documentElement.clientWidth < MOBILE_DESKTOP_BREAKPOINT) {\r\n        this.linksWrapMaxWidth = null\r\n      } else {\r\n        this.linksWrapMaxWidth = this.$el.offsetWidth - NAVBAR_VERTICAL_PADDING -\r\n          (this.$refs.siteName && this.$refs.siteName.offsetWidth || 0)\r\n      }\r\n    }\r\n    handleLinksWrapWidth()\r\n    window.addEventListener('resize', handleLinksWrapWidth, false)\r\n  },\r\n\r\n  computed: {\r\n    algolia () {\r\n      return this.$themeLocaleConfig.algolia || this.$site.themeConfig.algolia || {}\r\n    },\r\n\r\n    isAlgoliaSearch () {\r\n      return this.algolia && this.algolia.apiKey && this.algolia.indexName\r\n    }\r\n  }\r\n}\r\n\r\nfunction css (el, property) {\r\n  // NOTE: Known bug, will return 'auto' if style value is 'auto'\r\n  const win = el.ownerDocument.defaultView\r\n  // null means not to return pseudo styles\r\n  return win.getComputedStyle(el, null)[property]\r\n}\r\n",null]}
{"remainingRequest":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vuepress\\lib\\default-theme\\SidebarLink.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vuepress\\lib\\default-theme\\SidebarLink.vue","mtime":1540917186547},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540917155832},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\babel-loader\\lib\\index.js","mtime":1540917155418},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540917155832},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\index.js","mtime":1540917184042}],"contextDependencies":[],"result":["\r\nimport { isActive, hashRE, groupHeaders } from './util'\r\n\r\nexport default {\r\n  functional: true,\r\n\r\n  props: ['item'],\r\n\r\n  render (h, { parent: { $page, $site, $route }, props: { item }}) {\r\n    // use custom active class matching logic\r\n    // due to edge case of paths ending with / + hash\r\n    const selfActive = isActive($route, item.path)\r\n    // for sidebar: auto pages, a hash link should be active if one of its child\r\n    // matches\r\n    const active = item.type === 'auto'\r\n      ? selfActive || item.children.some(c => isActive($route, item.basePath + '#' + c.slug))\r\n      : selfActive\r\n    const link = renderLink(h, item.path, item.title || item.path, active)\r\n    const configDepth = $page.frontmatter.sidebarDepth != null\r\n      ? $page.frontmatter.sidebarDepth\r\n      : $site.themeConfig.sidebarDepth\r\n    const maxDepth = configDepth == null ? 1 : configDepth\r\n    const displayAllHeaders = !!$site.themeConfig.displayAllHeaders\r\n    if (item.type === 'auto') {\r\n      return [link, renderChildren(h, item.children, item.basePath, $route, maxDepth)]\r\n    } else if ((active || displayAllHeaders) && item.headers && !hashRE.test(item.path)) {\r\n      const children = groupHeaders(item.headers)\r\n      return [link, renderChildren(h, children, item.path, $route, maxDepth)]\r\n    } else {\r\n      return link\r\n    }\r\n  }\r\n}\r\n\r\nfunction renderLink (h, to, text, active) {\r\n  return h('router-link', {\r\n    props: {\r\n      to,\r\n      activeClass: '',\r\n      exactActiveClass: ''\r\n    },\r\n    class: {\r\n      active,\r\n      'sidebar-link': true\r\n    }\r\n  }, text)\r\n}\r\n\r\nfunction renderChildren (h, children, path, route, maxDepth, depth = 1) {\r\n  if (!children || depth > maxDepth) return null\r\n  return h('ul', { class: 'sidebar-sub-headers' }, children.map(c => {\r\n    const active = isActive(route, path + '#' + c.slug)\r\n    return h('li', { class: 'sidebar-sub-header' }, [\r\n      renderLink(h, path + '#' + c.slug, c.title, active),\r\n      renderChildren(h, c.children, path, route, maxDepth, depth + 1)\r\n    ])\r\n  }))\r\n}\r\n",null]}
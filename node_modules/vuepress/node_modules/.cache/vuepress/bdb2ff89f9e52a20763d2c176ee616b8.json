{"remainingRequest":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vuepress\\lib\\default-theme\\SearchBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vuepress\\lib\\default-theme\\SearchBox.vue","mtime":1541435391714},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541435337147},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\babel-loader\\lib\\index.js","mtime":1541435336746},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541435337147},{"path":"D:\\WWW\\GitHub\\Vue-analysis\\node_modules\\vue-loader\\lib\\index.js","mtime":1541435390562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      query: '',\r\n      focused: false,\r\n      focusIndex: 0\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    showSuggestions () {\r\n      return (\r\n        this.focused &&\r\n        this.suggestions &&\r\n        this.suggestions.length\r\n      )\r\n    },\r\n\r\n    suggestions () {\r\n      const query = this.query.trim().toLowerCase()\r\n      if (!query) {\r\n        return\r\n      }\r\n\r\n      const { pages, themeConfig } = this.$site\r\n      const max = themeConfig.searchMaxSuggestions || 5\r\n      const localePath = this.$localePath\r\n      const matches = item => (\r\n        item.title &&\r\n        item.title.toLowerCase().indexOf(query) > -1\r\n      )\r\n      const res = []\r\n      for (let i = 0; i < pages.length; i++) {\r\n        if (res.length >= max) break\r\n        const p = pages[i]\r\n        // filter out results that do not match current locale\r\n        if (this.getPageLocalePath(p) !== localePath) {\r\n          continue\r\n        }\r\n        if (matches(p)) {\r\n          res.push(p)\r\n        } else if (p.headers) {\r\n          for (let j = 0; j < p.headers.length; j++) {\r\n            if (res.length >= max) break\r\n            const h = p.headers[j]\r\n            if (matches(h)) {\r\n              res.push(Object.assign({}, p, {\r\n                path: p.path + '#' + h.slug,\r\n                header: h\r\n              }))\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return res\r\n    },\r\n\r\n    // make suggestions align right when there are not enough items\r\n    alignRight () {\r\n      const navCount = (this.$site.themeConfig.nav || []).length\r\n      const repo = this.$site.repo ? 1 : 0\r\n      return navCount + repo <= 2\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    getPageLocalePath (page) {\r\n      for (const localePath in this.$site.locales || {}) {\r\n        if (localePath !== '/' && page.path.indexOf(localePath) === 0) {\r\n          return localePath\r\n        }\r\n      }\r\n      return '/'\r\n    },\r\n\r\n    onUp () {\r\n      if (this.showSuggestions) {\r\n        if (this.focusIndex > 0) {\r\n          this.focusIndex--\r\n        } else {\r\n          this.focusIndex = this.suggestions.length - 1\r\n        }\r\n      }\r\n    },\r\n\r\n    onDown () {\r\n      if (this.showSuggestions) {\r\n        if (this.focusIndex < this.suggestions.length - 1) {\r\n          this.focusIndex++\r\n        } else {\r\n          this.focusIndex = 0\r\n        }\r\n      }\r\n    },\r\n\r\n    go (i) {\r\n      if (!this.showSuggestions) {\r\n        return\r\n      }\r\n      this.$router.push(this.suggestions[i].path)\r\n      this.query = ''\r\n      this.focusIndex = 0\r\n    },\r\n\r\n    focus (i) {\r\n      this.focusIndex = i\r\n    },\r\n\r\n    unfocus () {\r\n      this.focusIndex = -1\r\n    }\r\n  }\r\n}\r\n",null]}